# #BUENO
# events {
#     worker_connections 1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout  65;

#     server {
#         listen 80;
#         # server_name app1.fazttech.store www.app1.fazttech.store;
#         server_name localhost;

#         root /var/www/html/001;
#         index index.html;

#         location / {
#             try_files $uri $uri/ =404;
#         }
#     }

#     server {
#         listen 80;
#         # server_name app2.fazttech.store www.app2.fazttech.store;

#         root /var/www/html/002;
#         index index.html;

#         location / {
#             try_files $uri $uri/ =404;
#         }
#     }
# }


# events {
#     worker_connections 1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout  65;

#     # Sitio 003 en puerto 8081
#     server {
#         listen 8081;
#         server_name app1.fazttech.store;

#         root /var/www/html/001;
#         index index.html index.htm;

#         location / {
#             try_files $uri $uri/ =404;
#         }

#         # Archivos estáticos: CSS, JS, imágenes, fuentes, etc.
#         location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
#             try_files $uri =404;
#         }
#     }

    #     # Sitio 004 en puerto 8082
    #     server {
    #         listen 8082;
    #         server_name app2.fazttech.store;

    #         root /var/www/html/002;
    #         index index.html index.htm;

    #          location / {
    #             try_files $uri $uri/ =404;
    #         }

    #         # Archivos estáticos: CSS, JS, imágenes, fuentes, etc.
    #         location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    #             try_files $uri =404;
    #         }
    #     }
    # }


# BUENO SIN HTTPS solo HTTP el de abajo abajo no este
# COPIAAAAA

# AQUI TERMINA

# # app1 HTTP → redirect to HTTPS
# server {
#     listen 80;
#     server_name app1.fazttech.store www.app1.fazttech.store;
#     return 301 https://$host$request_uri;
# }

# # app1 HTTPS
# server {
#     listen 443 ssl;
#     server_name app1.fazttech.store www.app1.fazttech.store;

#     root /var/www/html/001;
#     index index.html;

#     ssl_certificate /etc/letsencrypt/live/fazttech.store/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/fazttech.store/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         try_files $uri $uri/ =404;
#     }
# }

# # app2 HTTP → redirect to HTTPS
# server {
#     listen 80;
#     server_name app2.fazttech.store www.app2.fazttech.store;
#     return 301 https://$host$request_uri;
# }

# # app2 HTTPS
# server {
#     listen 443 ssl;
#     server_name app2.fazttech.store www.app2.fazttech.store;

#     root /var/www/html/002;
#     index index.html;

#     ssl_certificate /etc/letsencrypt/live/fazttech.store/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/fazttech.store/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         try_files $uri $uri/ =404;
#     }
# }
# HTTP → redirect to HTTPS

# server {
#     listen 80;
#     server_name app1.fazttech.store www.app1.fazttech.store;
#     return 301 https://$host$request_uri;
# }

# server {
#     listen 80;
#     server_name app2.fazttech.store www.app2.fazttech.store;
#     return 301 https://$host$request_uri;
# }

# # app1 HTTPS
# server {
#     listen 443 ssl;
#     server_name app1.fazttech.store www.app1.fazttech.store;

#     root /usr/share/nginx/html/001;
#     index index.html;

#     ssl_certificate /etc/letsencrypt/live/fazttech.store/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/fazttech.store/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         try_files $uri $uri/ =404;
#     }
# }

# # app2 HTTPS
# server {
#     listen 443 ssl;
#     server_name app2.fazttech.store www.app2.fazttech.store;

#     root /usr/share/nginx/html/002;
#     index index.html;

#     ssl_certificate /etc/letsencrypt/live/fazttech.store/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/fazttech.store/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

#     location / {
#         try_files $uri $uri/ =404;
#     }
# }


# events {
#     worker_connections 1024;
# }

# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;

#     sendfile        on;
#     keepalive_timeout  65;

#     server {
        
#         listen 443 ssl;
#         server_name app1.fazttech.store www.app1.fazttech.store;

#         ssl_certificate     /etc/letsencrypt/live/app1.fazttech.store/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/app1.fazttech.store/privkey.pem;

#         root /var/www/html/001;
#         index index.html;

#         location / {
#             try_files $uri $uri/ =404;
#         }
#     }

#     server {

#     listen 443 ssl;
#     server_name app2.fazttech.store www.app2.fazttech.store;

#     ssl_certificate     /etc/letsencrypt/live/app2.fazttech.store/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/app2.fazttech.store/privkey.pem;

#     root /var/www/html/002;
#     index index.html;

#         location / {
#             try_files $uri $uri/ =404;
#         }
#     }

#     server {
#         listen 80;
#         server_name app1.fazttech.store www.app1.fazttech.store;
#         return 301 https://$host$request_uri;
#     }

#     server {
#         listen 80;
#         server_name app2.fazttech.store www.app2.fazttech.store;
#         return 301 https://$host$request_uri;
#     }

# }
events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # SSL optimization settings
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    sendfile        on;
    keepalive_timeout  65;

    # HTTP to HTTPS redirect for all domains
    server {
        listen 80;
        server_name app1.fazttech.store www.app1.fazttech.store app2.fazttech.store www.app2.fazttech.store;
        return 301 https://$host$request_uri;
    }

    # App1 - HTTPS configuration
    server {
        listen 443 ssl http2;
        server_name app1.fazttech.store www.app1.fazttech.store;

        # SSL certificate paths (will be managed by Certbot)
        ssl_certificate /etc/letsencrypt/live/app1.fazttech.store/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app1.fazttech.store/privkey.pem;

        root /var/www/html/001;
        index index.html;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            try_files $uri $uri/ =404;
        }

        # Let's Encrypt certificate renewal
        location ~ /.well-known {
            allow all;
            root /var/www/html/001;
        }
    }

    # App2 - HTTPS configuration
    server {
        listen 443 ssl http2;
        server_name app2.fazttech.store www.app2.fazttech.store;

        # SSL certificate paths (will be managed by Certbot)
        ssl_certificate /etc/letsencrypt/live/app2.fazttech.store/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/app2.fazttech.store/privkey.pem;

        root /var/www/html/002;
        index index.html;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            try_files $uri $uri/ =404;
        }

        # Let's Encrypt certificate renewal
        location ~ /.well-known {
            allow all;
            root /var/www/html/002;
        }
    }
}